name: Build Executables

on:
  push:
    branches: [ master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            artifact_name: AgeTicker-linux
          - os: windows-latest
            artifact_name: AgeTicker.exe
          - os: macos-latest
            artifact_name: AgeTicker
    
    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-build.txt
    
    - name: Install UPX (Ubuntu/Linux)
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt-get update && sudo apt-get install -y upx
    
    - name: Install UPX (macOS)
      if: matrix.os == 'macos-latest'
      run: brew install upx
    
    - name: Install UPX (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        Invoke-WebRequest -Uri "https://github.com/upx/upx/releases/download/v4.2.4/upx-4.2.4-win64.zip" -OutFile "upx.zip"
        Expand-Archive -Path "upx.zip" -DestinationPath "upx"
        echo "$env:GITHUB_WORKSPACE\upx\upx-4.2.4-win64" >> $env:GITHUB_PATH
    
    - name: Build with PyInstaller
      run: pyinstaller ageticker.spec
    
    - name: Compress with UPX
      shell: bash
      run: |
        if [ -f "dist/${{ matrix.artifact_name }}" ]; then
          echo "Original size: $(ls -la dist/${{ matrix.artifact_name }} | awk '{print $5}') bytes"
          upx --best --lzma --force "dist/${{ matrix.artifact_name }}" || echo "UPX compression failed or minimal benefit"
          echo "Compressed size: $(ls -la dist/${{ matrix.artifact_name }} | awk '{print $5}') bytes"
        fi
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.artifact_name }}
        path: dist/${{ matrix.artifact_name }}
        retention-days: 7

  release:
    if: startsWith(github.ref, 'refs/tags/')
    needs: build
    runs-on: ubuntu-latest
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          artifacts/AgeTicker-linux/AgeTicker-linux
          artifacts/AgeTicker.exe/AgeTicker.exe
          artifacts/AgeTicker/AgeTicker
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
