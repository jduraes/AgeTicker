name: Auto Version Bump

on:
  workflow_dispatch:
    inputs:
      bump_type:
        description: 'Version bump type'
        required: true
        default: 'patch'
        type: choice
        options:
        - patch
        - minor
        - major
      commit_message:
        description: 'Commit message'
        required: false
        default: 'Version bump'
        type: string

permissions:
  contents: write

jobs:
  bump-version:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Get current version
      id: current_version
      run: |
        CURRENT_VERSION=$(grep '^VERSION = ' main.py | sed 's/VERSION = "\(.*\)"/\1/')
        echo "current=$CURRENT_VERSION" >> $GITHUB_OUTPUT
        echo "Current version: $CURRENT_VERSION"
    
    - name: Calculate new version
      id: new_version
      run: |
        CURRENT="${{ steps.current_version.outputs.current }}"
        IFS='.' read -r MAJOR MINOR PATCH <<< "$CURRENT"
        
        case "${{ github.event.inputs.bump_type }}" in
          major)
            MAJOR=$((MAJOR + 1))
            MINOR=0
            PATCH=0
            ;;
          minor)
            MINOR=$((MINOR + 1))
            PATCH=0
            ;;
          patch)
            PATCH=$((PATCH + 1))
            ;;
        esac
        
        NEW_VERSION="$MAJOR.$MINOR.$PATCH"
        echo "new=$NEW_VERSION" >> $GITHUB_OUTPUT
        echo "New version: $NEW_VERSION"
    
    - name: Update version in code
      run: |
        CURRENT="${{ steps.current_version.outputs.current }}"
        NEW="${{ steps.new_version.outputs.new }}"
        sed -i "s/VERSION = \"$CURRENT\"/VERSION = \"$NEW\"/" main.py
        echo "Updated VERSION in main.py to $NEW"
    
    - name: Commit and tag
      run: |
        NEW_VERSION="${{ steps.new_version.outputs.new }}"
        COMMIT_MSG="${{ github.event.inputs.commit_message }}"
        
        git config user.name github-actions
        git config user.email github-actions@github.com
        
        git add main.py
        git commit -m "$COMMIT_MSG to v$NEW_VERSION"
        git tag "v$NEW_VERSION"
        
        git push origin main || git push origin master
        git push origin "v$NEW_VERSION"
    
    - name: Summary
      run: |
        echo "âœ… Version bumped to v${{ steps.new_version.outputs.new }}"
        echo "ðŸš€ Release workflow will be triggered automatically"
        echo "ðŸ“¦ Tag v${{ steps.new_version.outputs.new }} has been created and pushed"