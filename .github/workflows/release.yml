name: release

on:
  push:
    tags:
      - "v*.*.*"

permissions:
  contents: write

jobs:
  build:
    name: Build (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          if [ "${{ runner.os }}" = "Windows" ]; then pip install windows-curses; fi
        shell: bash

      - name: Build binary
        run: |
          pyinstaller --onefile main.py --name ageticker
        shell: bash

      - name: Prepare artifact
        run: |
          mkdir -p upload
          if [ "${{ runner.os }}" = "Windows" ]; then
            mv dist/ageticker.exe upload/ageticker-windows-amd64.exe
          elif [ "${{ runner.os }}" = "macOS" ]; then
            mv dist/ageticker upload/ageticker-macos-universal
          else
            mv dist/ageticker upload/ageticker-linux-amd64
          fi
        shell: bash

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ageticker-${{ runner.os }}
          path: upload/*

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: release

      - name: Create GitHub Release and upload assets
        uses: softprops/action-gh-release@v2
        with:
          files: release/**/*
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

